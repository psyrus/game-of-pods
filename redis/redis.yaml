---
# StatefulSet - Name: redis-cluster
# Replicas: 6
# Pods status: Running (All 6 replicas)
# Image: redis:5.0.1-alpine
# container name: redis, command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
# Env: name: 'POD_IP', valueFrom: 'fieldRef', fieldPath: 'status.podIP' (apiVersion: v1)
# Ports - name: 'client', containerPort: '6379'
# Ports - name: 'gossip', containerPort: '16379'
# Volume Mount - name: 'conf', mountPath: '/conf', readOnly:'false' (ConfigMap Mount)
# Volume Mount - name: 'conf', mountPath: '/conf', defaultMode = '0755' (ConfigMap Mount)
# Volume Mount - name: 'data', mountPath: '/data', readOnly:'false' (volumeClaim)
# volumes - name: 'conf', Type: 'ConfigMap', ConfigMap Name: 'redis-cluster-configmap',
# volumeClaimTemplates - name: 'data'
# volumeClaimTemplates - accessModes: 'ReadWriteOnce'
# volumeClaimTemplates - Storage Request: '1Gi'
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  selector:
    matchLabels:
      app: redis-cluster # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 6 # by default is 1
  template:
    metadata:
      labels:
        app: redis-cluster # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis
        image: redis:5.0.1-alpine
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
          defaultMode: '0755'
        - name: data
          mountPath: /data
          readOnly: false
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-configmap
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
# Volume Mount - name: 'conf', mountPath: '/conf', readOnly:'false' (ConfigMap Mount)
# Volume Mount - name: 'conf', mountPath: '/conf', defaultMode = '0755' (ConfigMap Mount)
# Volume Mount - name: 'data', mountPath: '/data', readOnly:'false' (volumeClaim)
# volumes - name: 'conf', Type: 'ConfigMap', ConfigMap Name: 'redis-cluster-configmap',
# volumeClaimTemplates - name: 'data'
# volumeClaimTemplates - accessModes: 'ReadWriteOnce'
# volumeClaimTemplates - Storage Request: '1Gi'
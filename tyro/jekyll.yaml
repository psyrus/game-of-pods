---
# pod: 'jekyll' has an initContainer, name: 'copy-jekyll-site', image: 'kodekloud/jekyll'
# initContainer: 'copy-jekyll-site' command: [ "jekyll", "new", "/site" ] (command to run: jekyll new /site)
# pod: 'jekyll', initContainer: 'copy-jekyll-site', mountPath = /site
# pod: 'jekyll', initContainer: 'copy-jekyll-site', volume name = site
# pod: 'jekyll', container: 'jekyll', volume name = site
# pod: 'jekyll', container: 'jekyll', mountPath = /site
# pod: 'jekyll', container: 'jekyll', image = kodekloud/jekyll-serve
# pod: 'jekyll', uses volume called 'site' with pvc = 'jekyll-site'
# pod: 'jekyll' uses label 'run=jekyll'
apiVersion: v1
kind: Pod
metadata:
  name: jekyll
  labels:
    run: jekyll
  namespace: development
spec:
  volumes:
    - name: site
      persistentVolumeClaim:
        claimName: jekyll-site
  containers:
  - name: jekyll
    image: kodekloud/jekyll-serve
    volumeMounts:
      - mountPath: "/site"
        name: site
  initContainers:
  - name: copy-jekyll-site
    image: kodekloud/jekyll
    command: ["jekyll", "new", "/site" ]
    volumeMounts:
    - mountPath: "/site"
      name: site
---
# Service 'jekyll' uses targetPort: '4000' , namespace: 'development'
# Service 'jekyll' uses Port: '8080' , namespace: 'development'
# Service 'jekyll' uses NodePort: '30097' , namespace: 'development'
apiVersion: v1
kind: Service
metadata:
  name: jekyll
  namespace: development
spec:
  type: NodePort
  selector:
    run: jekyll
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 8080
      targetPort: 4000
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      nodePort: 30097